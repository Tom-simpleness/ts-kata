# Code Smells kata

## The problem

We created a very smelly implementation of TicTacToe.

There are a number of code smells in the implementation namely:

- Primitive obsession
- Feature envy
- Data class
- Message chain
- Long method
- Comments
- Long parameter list
- Shotgun surgery
- Duplicated code
- Large class
- Divergent change
- Data clump
- Lazy class
- Dead code

## Your tasks

### First run

Start by identifying the code smells, add comments where you find code smells.

### Second run

Refactor the code to remove the identified code smells using the specific code smell refactoring guidelines.

1. Remember to keep the tests passing at all times during the refactor.
2. For every refactor run the tests and if they pass commit.
3. It's ok to revert back to a previous working state at any moment.

### Refactoring Priority Premise

- Refactor readability
  - Comments
  - Dead code
  - Magic strings and numbers
  - Scope (variables, blocks)
- Reduce complexity
  - Duplicated code
  - Long method
- Reorder responsibilities
  - Data class
  - Message chain
  - Feature Envy
  - Inappropriate Intimacy
  - Large class
- Refine abstractions
  - Long parameter list
  - Data clump
  - Primitive obsession
  - Middle man
- Refactor to design patterns
  - Strategy
  - State
  - Command
  - others
